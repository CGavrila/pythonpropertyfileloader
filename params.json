{
  "name": "Pythonpropertyfileloader",
  "tagline": "A python module to load  property files. Similar to the Properties class in Java.",
  "body": "# pythonpropertyfileloader\r\n## A python module to load  property files.\r\n### Actually it is like the PropertyPlaceholderConfigurer in spring which lets you use ${variable-reference} to refer to already defined property ).\r\n\r\n\r\n**Example**\r\n--------\r\nLet's say you have the following properties defined in my_file.properties file\r\n\r\n\r\nfoo = I am awesome  \r\nbar = ${chocolate}-bar  \r\nchocolate = fudge\r\nlong = a very long property that is described in the property file which takes up \\\r\nmultiple lines can be defined by the escape character as it is done here\r\n\r\n**Code to load the above properties  **\r\n\r\n`from properties import p`\r\n\r\n`prop = p.Property()  `\r\n`prop.load('path/to/my_file.properties')  `\r\n`prop.get('foo')  # I am awesome  `\r\n`prop.get('bar')  # fudge-bar`\r\n`prop.get('long')  # a very long property that is described in the property file which takes up multiple lines can be defined by the escape character as it is done here`\r\n`prop.get('unknown')   # None`\r\n\r\n**Use showall() to get the key value pair of all the properties defined in the file(s)**\r\n\r\n`print(prop.showall()) # {'long': 'a very long property that is described in the property file which takes up multiple lines can be defined by the escape character as it is done here', 'foo': 'I am awesome', 'chocolate': 'fudge', 'bar': '${chocolate}-bar'}`\r\n\r\n**To load multiple property files use**\r\n\r\n`prop.load('path/to/first_file','path/to/second_file',....'path/to/nth_file')`\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}